# Создание многопоточного приложения

В данной работе необходимо написать многопоточное приложение, которое эмулирует заданную модель. Студент сам должен спроектировать потоки, которые отвечают за поведение сущностей из полученного задания. Взаимодействие потоков должно быть синхронизировано и приложение должно быть протестирование на наличие dead locks и race conditions. Приложение не должно переставать работать из-за изменения задержек и модель не должна быть полностью синхронной.

## Вариант 5

Очередь.Для обслуживания заказов, в магазине установлена билетная машина, которая выдает билеты покупателям. Билеты пронумерованы в диапазоне 1..MT. За билетом с номером MT следует билет с номером 1 (в аппарате установил новый рулон бумаги). Имеется дисплей, показывающий номер билета покупателя который в данный момент обслуживается. Покупатель с билетом с таким же числом что и на дисплее счетчика обслуживается. Когда сервис завершен, число на дисплее увеличивается на единицу. Каждый покупатель должен быть создан в виде отдельной нити, которая получает билет, обслуживается, и прекращает работу.
